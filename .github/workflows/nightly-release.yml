name: Nightly Release

on:
  schedule:
    - cron: '0 0 * * *'  # This runs at midnight UTC every day
  workflow_dispatch:   # This allows the workflow to be triggered manually

jobs:
  check-commits:
    runs-on: ubuntu-latest
    outputs:
      has_new_commits: ${{ steps.check-for-commits.outputs.has_new_commits }}
    steps:
      - name: Check out the repository
        uses: actions/checkout@v4.1.7

      - name: Get the date of the last run
        id: last-run
        run: echo "DATE=$(date -u -d '1 day ago' +'%Y-%m-%dT%H:%M:%SZ')" >> $GITHUB_ENV

      - name: Check for new commits since the last run
        id: check-for-commits
        run: |
          last_run_date=$(echo "${{ env.DATE }}" | xargs -I {} date -u -d {} +'%Y-%m-%dT%H:%M:%SZ')
          new_commits=$(git log --since="$last_run_date" --oneline)
          if [ -n "$new_commits" ]; then
            echo "::set-output name=has_new_commits::true"
          else
            echo "::set-output name=has_new_commits::false"
          fi

  release:
    runs-on: ubuntu-latest
    needs: check-commits
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Check out the repository
        uses: actions/checkout@v4.1.7

      - name: Delete existing nightly release
        if: needs.check-commits.outputs.has_new_commits == 'true'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          release_id=$(curl -sSf -H "Authorization: Bearer $GITHUB_TOKEN" "https://api.github.com/repos/${GITHUB_REPOSITORY}/releases/tags/nightly" | jq -r '.id')
          if [ -n "$release_id" ]; then
            curl -sSf \
              -H "Authorization: Bearer $GITHUB_TOKEN" \
              -X DELETE \
              "https://api.github.com/repos/${GITHUB_REPOSITORY}/releases/${release_id}"
          fi

      - name: Create new release
        if: needs.check-commits.outputs.has_new_commits == 'true'
        uses: actions/create-release@v1.1.4
        with:
          tag_name: nightly
          release_name: Nightly Build
          draft: false
          prerelease: true
          body: "This is a Nightly build"

      - name: No new commits
        if: needs.check-commits.outputs.has_new_commits == 'false'
        run: echo "No new commits found."

  build:
    name: Build, Sign & Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout project
        uses: actions/checkout@v4.1.7
        with:
          token: ${{ secrets.GIT_BOT_TOKEN }}

      - name: set up JDK 17
        uses: actions/setup-java@v4.2.1
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: gradle

      - uses: actions/cache@v4.0.2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Get weather.properties from secrets
        run: printf "%s" "${{ secrets.WEATHER_PROPERTIES }}" > $GITHUB_WORKSPACE/weather.properties

      - name: Build with Gradle
        run: ./gradlew clean && ./gradlew assembleWithInternetRelease && ./gradlew assembleWithoutInternetRelease

      - name: Sign APK - WithInternet
        uses: ilharp/sign-android-release@v1.0.4
        # ID used to access action output
        id: sign_app_withInternet
        with:
          releaseDir: app/build/outputs/apk/withInternet/release
          signingKey: ${{ secrets.SIGNINGKEY_BASE64 }}
          keyAlias: ${{ secrets.KEY_ALIAS }}
          keyStorePassword: ${{ secrets.KEY_STORE_PASSWORD }}
          keyPassword: ${{ secrets.KEY_PASSWORD }}
          buildToolsVersion: 33.0.0

      - name: Release to GitHub - WithInternet
        uses: svenstaro/upload-release-action@2.9.0
        with:
          repo_token: ${{ secrets.GIT_BOT_TOKEN }}
          file: ${{steps.sign_app_withInternet.outputs.signedFile}}
          asset_name: EasyLauncher-Internet-${{ github.ref_name }}-Signed.apk
          tag: nightly
          overwrite: true

      - name: Sign APK - WithoutInternet
        uses: ilharp/sign-android-release@v1.0.4
        # ID used to access action output
        id: sign_app_withoutInternet
        with:
          releaseDir: app/build/outputs/apk/withoutInternet/release
          signingKey: ${{ secrets.SIGNINGKEY_BASE64 }}
          keyAlias: ${{ secrets.KEY_ALIAS }}
          keyStorePassword: ${{ secrets.KEY_STORE_PASSWORD }}
          keyPassword: ${{ secrets.KEY_PASSWORD }}
          buildToolsVersion: 33.0.0

      - name: Release to GitHub  - WithoutInternet
        uses: svenstaro/upload-release-action@2.9.0
        with:
          repo_token: ${{ secrets.GIT_BOT_TOKEN }}
          file: ${{steps.sign_app_withoutInternet.outputs.signedFile}}
          asset_name: EasyLauncher-${{ github.ref_name }}-Signed.apk
          tag: nightly
          overwrite: true

